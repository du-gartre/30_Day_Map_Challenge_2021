#' Nombres de los esquites por estado
#'
#' 30 Day map Challenge (Noviembre, 2021)
#' México
#'
#' Por:
#'  David Garibay
#'  Karen Santoyo
# Importar librerías ------------------------------------------------------
library(plotly)
library(sf)
library(rgdal)
library(leaflet)
library(ggplot2)
library(dplyr)
# Importar datos ----------------------------------------------------------
## Base con nombres de esquites por Entidad Federativa ----
#' Esta base la creamos manualmente a partir de la información de:
#' https://es.wikipedia.org/wiki/Esquites
df_esquites <- read.csv(file = "data/nombres_esquites.csv") %>%
# Ordenamos las entidades por orden alfabético
arrange(Entidad)
## Shapefile a nivel Entidad Federativa ----
# Este mapa fue obtenido del Marco Geoestadístico de Septiembre de 2019 del
# INEGI. En particular, descargamos el Marco Geoestadístico Integrado Sept 2019
# https://www.inegi.org.mx/app/biblioteca/ficha.html?upc=889463776079
# shp_ent <- st_read("data/00ent_wgs84.shp")
shp_ent <- readOGR(dsn = "data", layer = "00ent_wgs84")
st_crs(shp_ent)
# Renombramos columna de entidades federativas
shp_ent$NOMGEO <- df_esquites$Entidad
# Manipulación de datos ---------------------------------------------------
# Unimos las bases de datos
shp_datos <- merge(x = shp_ent,
y = df_esquites,
by.x = "NOMGEO",
by.y = "Entidad",
all.x = TRUE)
# Volvemos variables categóricas (factors) a los nombres de los esquites
shp_datos$Nombre <- factor(x = shp_datos$Nombre,
levels = c("Esquite", "Elote en vaso",
"Cóctel de elote", "Chasca",
"Elote desgranado", "Trolelote"))
shp_datos$NOMGEO
shp_datos$CVEGEO
shp_datos$CVE_ENT
shp_datos$Nombre
shp_datos$geometry
# Paleta de colores?
# # Leaflet para volverlo mapa
leaflet(data = shp_datos) %>%
addTiles() %>%
addPolygons(label = ~shp_datos$Nombre)
proj4string(shp_datos)
# shp_ent <- st_read("data/00ent_wgs84.shp")
shp_ent <- readOGR(dsn = "data", layer = "00ent_wgs84", use_iconv = TRUE)
st_crs(shp_ent)
# Renombramos columna de entidades federativas
shp_ent$NOMGEO <- df_esquites$Entidad
# Unimos las bases de datos
shp_datos <- merge(x = shp_ent,
y = df_esquites,
by.x = "NOMGEO",
by.y = "Entidad",
all.x = TRUE)
# Volvemos variables categóricas (factors) a los nombres de los esquites
shp_datos$Nombre <- factor(x = shp_datos$Nombre,
levels = c("Esquite", "Elote en vaso",
"Cóctel de elote", "Chasca",
"Elote desgranado", "Trolelote"))
shp_datos$NOMGEO
shp_datos$CVEGEO
shp_datos$CVE_ENT
shp_datos$Nombre
shp_datos$geometry
# # Leaflet para volverlo mapa
leaflet(data = shp_datos) %>%
addTiles() %>%
addPolygons(label = ~shp_datos$Nombre)
# leaflet(shp_datos) %>%
#   addProviderTiles("Esri.WorldTerrain") %>%
#   addPolygons(label = shp_datos$Nombre)
shp_datos$Nombre
proj4string(shp_datos)
ggplot(shp_datos, aes(fill = Nombre)) +
geom_sf()
# # Leaflet para volverlo mapa
leaflet(data = shp_datos) %>%
addTiles() %>%
addPolygons(label = ~shp_datos$Nombre)
shp_ent <- st_read("data/00ent_wgs84.geojson")
shp_ent <- st_read("data/estados.geojson")
## Base con nombres de esquites por Entidad Federativa ----
#' Esta base la creamos manualmente a partir de la información de:
#' https://es.wikipedia.org/wiki/Esquites
df_esquites <- read.csv(file = "data/nombres_esquites.csv") %>%
# Ordenamos las entidades por orden alfabético
arrange(Entidad)
# Renombramos columna de entidades federativas
shp_ent$NOMGEO <- df_esquites$Entidad
# Unimos las bases de datos
shp_datos <- merge(x = shp_ent,
y = df_esquites,
by.x = "NOMGEO",
by.y = "Entidad",
all.x = TRUE)
# Volvemos variables categóricas (factors) a los nombres de los esquites
shp_datos$Nombre <- factor(x = shp_datos$Nombre,
levels = c("Esquite", "Elote en vaso",
"Cóctel de elote", "Chasca",
"Elote desgranado", "Trolelote"))
# # Leaflet para volverlo mapa
leaflet(data = shp_datos) %>%
addTiles() %>%
addPolygons(label = ~shp_datos$Nombre)
shp_datos$Nombre
shp_datos$NOMGEO
shp_datos$Nombre
## Base con nombres de esquites por Entidad Federativa ----
#' Esta base la creamos manualmente a partir de la información de:
#' https://es.wikipedia.org/wiki/Esquites
df_esquites <- read.csv(file = "data/nombres_esquites.csv") %>%
# Ordenamos las entidades por orden alfabético
arrange(Entidad)
View(df_esquites)
# Volvemos variables categóricas (factors) a los nombres de los esquites
shp_datos$Nombre <- factor(x = shp_datos$Nombre,
levels = c("Esquite", "Elote en vaso",
"Cóctel de elote", "Chasca",
"Elote desgranado", "Trolelote",
"Vasolote"))
# # Leaflet para volverlo mapa
leaflet(data = shp_datos, options = leafletOptions(zoomControl = FALSE)) %>%
addTiles() %>%
addPolygons(label = ~shp_datos$Nombre)
shp_datos$Nombre
# Unimos las bases de datos
shp_datos <- merge(x = shp_ent,
y = df_esquites,
by.x = "NOMGEO",
by.y = "Entidad",
all.x = TRUE)
shp_datos$Nombre
# Volvemos variables categóricas (factors) a los nombres de los esquites
shp_datos$Nombre <- factor(x = shp_datos$Nombre,
levels = c("Esquite", "Elote en vaso",
"Cóctel de elote", "Chasca",
"Elote desgranado", "Trolelote",
"Vasolote"))
# # Leaflet para volverlo mapa
leaflet(data = shp_datos, options = leafletOptions(zoomControl = FALSE)) %>%
addTiles() %>%
addPolygons(label = ~shp_datos$Nombre)
# Paleta de colores?
pal_fac <- colorFactor(palette = "Set2",
domain = shp_datos$Nombre)
# # Leaflet para volverlo mapa
leaflet(data = shp_datos, options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre))
# # Leaflet para volverlo mapa
leaflet(data = shp_datos, options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre),
opacity = 1)
# # Leaflet para volverlo mapa
leaflet(data = shp_datos, options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre),
opacity = 0,
fillOpacity = 1)
# # Leaflet para volverlo mapa
leaflet(data = shp_datos, options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre),
opacity = 1,
fillOpacity = 0.7)
# # Leaflet para volverlo mapa
leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre),
opacity = 1,
fillOpacity = 0.7) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
leaflet(data = shp_datos) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre),
opacity = 1,
fillOpacity = 0.7) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
# # Leaflet para volverlo mapa
leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre),
opacity = 1, weight = 1,
fillOpacity = 0.7) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
# # Leaflet para volverlo mapa
leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre),
opacity = 1,
smoothFactor = 0.5,
weight = 1,
fillOpacity = 0.7) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
shp_datos$CVE_ENT
shp_datos$NOMGEO
# # Leaflet para volverlo mapa
leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre),
layerId = ~shp_datos$NOMGEO
opacity = 1,
smoothFactor = 0.5,
weight = 1,
fillOpacity = 0.7) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
# # Leaflet para volverlo mapa
leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre),
layerId = ~shp_datos$NOMGEO,
opacity = 1,
smoothFactor = 0.5,
weight = 1,
fillOpacity = 0.7) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
# # Leaflet para volverlo mapa
leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
label = ~shp_datos$Nombre,
fillColor = ~pal_fac(shp_datos$Nombre),
layerId = ~shp_datos$NOMGEO,
opacity = 1,
smoothFactor = 0.5,
weight = 1,
fillOpacity = 0.7,
highlightOptions = highlightOptions(color = "white",
weight = 2,
bringToFront = TRUE)) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
shp_datos$NOMGEO
# pop-up
popup <-  paste0(
"<b>", "Estado:", "</b>", as.character(shp_datos$NOMGEO), "<br>",
"<b>", "Nombre:", "</b>", as.character(shp_datos$Nombre), "<br>")
## Leaflet para volverlo mapa
leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
fillColor = ~pal_fac(shp_datos$Nombre),
layerId = ~shp_datos$NOMGEO,
opacity = 1,
smoothFactor = 0.5,
weight = 1,
fillOpacity = 0.7,
highlightOptions = highlightOptions(color = "white",
weight = 2,
bringToFront = TRUE),
label = ~shp_datos$Nombre,
labelOptions = labelOptions(direction = "auto"),
popup = popup) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
# pop-up
popup <-  paste0(
"<b>", "Estado: ", "</b>", as.character(shp_datos$NOMGEO), "<br>",
"<b>", "Nombre: ", "</b>", as.character(shp_datos$Nombre), "<br>")
## Leaflet para volverlo mapa
leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
fillColor = ~pal_fac(shp_datos$Nombre),
layerId = ~shp_datos$NOMGEO,
opacity = 1,
smoothFactor = 0.5,
weight = 1,
fillOpacity = 0.7,
highlightOptions = highlightOptions(color = "white",
weight = 2,
bringToFront = TRUE),
label = ~shp_datos$Nombre,
labelOptions = labelOptions(direction = "auto"),
popup = popup) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
install.packages("mapview")
library(mapview)
## Leaflet (interactivo) ----
# En este caso es interactivo, seguí el tutorial de
# Juvenal Campos:
# https://juvenalcampos.com/2020/01/13/tutorial-de-mapas-en-leaflet/
leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
fillColor = ~pal_fac(shp_datos$Nombre),
layerId = ~shp_datos$NOMGEO,
opacity = 1,
smoothFactor = 0.5,
weight = 1,
fillOpacity = 0.7,
highlightOptions = highlightOptions(color = "white",
weight = 2,
bringToFront = TRUE),
label = ~shp_datos$Nombre,
labelOptions = labelOptions(direction = "auto"),
popup = popup) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
m = mapview(breweries)
m
## Leaflet (interactivo) ----
# En este caso es interactivo, seguí el tutorial de
# Juvenal Campos:
# https://juvenalcampos.com/2020/01/13/tutorial-de-mapas-en-leaflet/
lft_esquites <- leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
fillColor = ~pal_fac(shp_datos$Nombre),
layerId = ~shp_datos$NOMGEO,
opacity = 1,
smoothFactor = 0.5,
weight = 1,
fillOpacity = 0.7,
highlightOptions = highlightOptions(color = "white",
weight = 2,
bringToFront = TRUE),
label = ~shp_datos$Nombre,
labelOptions = labelOptions(direction = "auto"),
popup = popup) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
getwd()
m = mapview(lft_esquites)
## Leaflet (interactivo) ----
# En este caso es interactivo, seguí el tutorial de
# Juvenal Campos:
# https://juvenalcampos.com/2020/01/13/tutorial-de-mapas-en-leaflet/
lft_esquites <- leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444",
fillColor = ~pal_fac(shp_datos$Nombre),
layerId = ~shp_datos$NOMGEO,
opacity = 1,
smoothFactor = 0.5,
weight = 1,
fillOpacity = 0.7,
highlightOptions = highlightOptions(color = "white",
weight = 2,
bringToFront = TRUE),
label = ~shp_datos$Nombre,
labelOptions = labelOptions(direction = "auto"),
popup = popup) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
m = mapview(lft_esquites)
mapshot(lft_esquites, file = "figs/mapa_esquites.png")
getwd()
mapshot(lft_esquites, file = paste0(getwd(), "figs/mapa_esquites.png"))
webshot::install_phantomjs()
mapshot(lft_esquites, file = paste0(getwd(), "figs/mapa_esquites.png"))
lft_esquites
mapshot(lft_esquites, file = "figs/mapa_esquites.png")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
## Como HTML ----
htmlwidgets::saveWidget(mapa, "figs/mapa_esquites.html")
## Como HTML ----
htmlwidgets::saveWidget(lft_esquites, "figs/mapa_esquites.html")
#' Día 1:
#' Nombres de los esquites por estado
#'
#' 30 Day map Challenge (Noviembre, 2021)
#' México
#'
#' Por:
#'  David Garibay
#'  Karen Santoyo
# Importar librerías ------------------------------------------------------
library(sf)      # para leer mapas
library(leaflet) # para crear mapas
library(dplyr)
library(mapview) # para guardar leaflet en png o jpg
# Importar datos ----------------------------------------------------------
## Base con nombres de esquites por Entidad Federativa ----
#' Esta base la creamos manualmente a partir de la información de:
#' https://es.wikipedia.org/wiki/Esquites
df_esquites <- read.csv(file = "data/nombres_esquites.csv") %>%
# Ordenamos las entidades por orden alfabético
arrange(Entidad)
## Shapefile a nivel Entidad Federativa ----
# Este mapa fue obtenido del Marco Geoestadístico de Septiembre de 2019 del
# INEGI. En particular, descargamos el Marco Geoestadístico Integrado Sept 2019
# https://www.inegi.org.mx/app/biblioteca/ficha.html?upc=889463776079
# Luego de ello, en QGIS volvimos el mapa a formato GeoJson y se le agregó el
# CRS WGS-84
shp_ent <- st_read("data/estados.geojson")
# Renombramos columna de entidades federativas
shp_ent$NOMGEO <- df_esquites$Entidad
# Manipulación de datos ---------------------------------------------------
## Unimos las bases de datos ----
shp_datos <- merge(x = shp_ent,
y = df_esquites,
by.x = "NOMGEO",
by.y = "Entidad",
all.x = TRUE)
## Creamos variables categóricas (factors) ----
shp_datos$Nombre <- factor(x = shp_datos$Nombre,
levels = c("Esquite", "Elote en vaso",
"Cóctel de elote", "Chasca",
"Elote desgranado", "Trolelote",
"Vasolote"))
# Creación del mapa -------------------------------------------------------
## Paleta de colores ----
pal_fac <- colorFactor(palette = "Set2",
domain = shp_datos$Nombre)
## pop-up ----
popup <-  paste0(
"<b>", "Estado: ", "</b>", as.character(shp_datos$NOMGEO), "<br>",
"<b>", "Nombre: ", "</b>", as.character(shp_datos$Nombre), "<br>")
## Leaflet (interactivo) ----
# En este caso es interactivo, seguí el tutorial de
# Juvenal Campos:
# https://juvenalcampos.com/2020/01/13/tutorial-de-mapas-en-leaflet/
lft_esquites <- leaflet(data = shp_datos,
options = leafletOptions(zoomControl = FALSE)) %>%
addProviderTiles("Esri.WorldTerrain") %>%
addPolygons(color = "#444444", # Color de los bordes
fillColor = ~pal_fac(shp_datos$Nombre),  # Relleno de estados
layerId = ~shp_datos$NOMGEO,
opacity = 1, # Opacidad de los bordes
smoothFactor = 0.5,
weight = 1, # Grosor de los bordes
fillOpacity = 0.7,
highlightOptions = highlightOptions(color = "white",
weight = 2,
bringToFront = TRUE),
label = ~shp_datos$Nombre,
labelOptions = labelOptions(direction = "auto"),
popup = popup) %>%
addLegend(position = "bottomleft",
pal = pal_fac,
values = ~shp_datos$Nombre,
title = "Nombre de esquites")
## Como HTML ----
htmlwidgets::saveWidget(lft_esquites, "figs/mapa_esquites.html")
