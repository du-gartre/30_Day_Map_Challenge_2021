---
title: "Proyecto Integrador"
author: "David Ulises Garibay Treviño"
date: "13/12/2020"
output: html_document
editor_options: 
  chunk_output_type: inline
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = T, 
                      message = F, 
                      warning = F, 
                      fig.align = "center")
```

En este documento busco demostrar las habilidades y conocimientos adquiridos durante la clase de _Programación en R_ y el _Taller de Visualización de Datos_. Para ello obtendré y presentaré información relacionada con el desarrollo de la Enfermedad Coronavirus-19 (también referido como COVID-19) en el estado de Guerrero. Para ello, utilizo la base de datos oficial de casos de COVID en México y distintas herramientas como ploltly y Shiny para generar visualizaciones interactivas de la información.

```{r librerías}

library(tidyverse)
library(tidyr)
library(ggplot2)
library(lubridate)
library(dplyr)
library(rgdal)
library(leaflet)
library(readxl)
library(plotly)
library(reshape2)
library(rgdal)
library(DT)

```

```{r bases de datos}
# Vector con el nombre de los sectores presentes en Guerrero
v_sector <- c("ESTATAL", "IMSS", "IMSS-BIENESTAR", "ISSSTE", "MUNICIPAL", "PEMEX", "PRIVADA",
              "SEDENA", "SEMAR", "SSA")

v_names_reslab <- c("Positivo", "Negativo", "Pendiente", "No adecuado", "Sin muestra")

# Catálogo de datos de la base de COVID
# Importamos la hoja con el nombre de los municipios
df_muni <- read_xlsx("Catalogos_071020.xlsx", sheet = "Catálogo MUNICIPIOS")

df_muni_gro <- df_muni %>% 
        filter(CLAVE_ENTIDAD == 12) %>% 
        select(- CLAVE_ENTIDAD) %>% 
        mutate(CLAVE_MUNICIPIO = as.numeric(CLAVE_MUNICIPIO))

# Base de datos de casos confirmados en Guerrero
df_gro <- read.csv(file = "df_Guerrero_total.csv", row.names = "X")

df_gro$cat_edad <- cut_interval(x = df_gro$EDAD, length = 10)

df_gro <- df_gro %>% 
    mutate(SEXO = as.factor(SEXO),
           EDAD = as.factor(EDAD),
           RESULTADO_LAB = as.factor(RESULTADO_LAB),
           SECTOR = factor(SECTOR),
           FECHA_SINTOMAS = as.Date(FECHA_SINTOMAS),
           FECHA_INGRESO = as.Date(FECHA_INGRESO),
           XX = 1)

levels(df_gro$SECTOR) <- v_sector
levels(df_gro$SEXO) <- c("Mujer", "Hombre")

# Base de datos de fallecidos en Guerrero
df_gro_falle <- read.csv(file = "df_Guerrero_muertes.csv")

df_gro_falle$cat_edad <- cut_interval(x = df_gro_falle$EDAD, length = 10)

df_gro_falle <- df_gro_falle %>% 
    mutate(SEXO = as.factor(SEXO),
           EDAD = as.factor(EDAD),
           RESULTADO_LAB = as.factor(RESULTADO_LAB),
           SECTOR = factor(x = SECTOR),
           FECHA_SINTOMAS = as.Date(FECHA_SINTOMAS),
           FECHA_DEF = as.Date(FECHA_DEF),
           XX = 1)

levels(df_gro_falle$SECTOR) <- v_sector
levels(df_gro_falle$SEXO) <- c("Mujer", "Hombre")
```


# Estadísticas de Resumen


```{r}
n_pruebas <- nrow(df_gro)
n_enfermos <- nrow(df_gro %>% filter(RESULTADO_LAB == 1))
n_muertos <- nrow(df_gro_falle)
```

En Guerrero, para el 30 de noviembre de 2020, se presentaron:

* **`r n_pruebas`** pruebas realizadas
* **`r n_enfermos`** pruebas que dieron resultado positivo
* **`r n_muertos`** muertos

## Administración de Pruebas para el SARS-COVID 19 en Guerrero

En el siguiente gráfico podemos observar la distribución de los resultados de todas las pruebas realizadas en Guerrero hasta el 30 de noviembre de 2020. De todas las pruebas, el resultado con mayor frecuencia fue el positivo, con poco más de 23,600 personas, seguido por casos negativos, con aproximadamente 18,700 personas. Existen otras tres categorías que tienen muy poco peso comparado con las dos anteriores, éstas se relacionan a los casos cuando no se realizaban muestras, los resultados estaban pendientes y los resultados no eran adecuados para tener una interpretación definitiva.

```{r primera}

# Reordenamos los niveles del factor, para graficar
df_gro_falle$SECTOR <- factor(x = df_gro_falle$SECTOR, levels = names(sort(table(df_gro_falle$SECTOR))))

df_gro$RESULTADO_LAB <- factor(x = df_gro$RESULTADO_LAB, 
                                     levels = names(sort(table(df_gro$RESULTADO_LAB))))

# Fallecimientos por sector
falle_sector <- ggplot(df_gro_falle, aes(x= SECTOR, fill= SECTOR)) + 
                          geom_bar(width = 1, color="white") + 
                          labs(title = "Distribución de fallecimientos por COVID-19", 
                               subtitle = "Por Sector") +
                          scale_fill_brewer(palette = "Set3", 
                                            name = "Sector", labels = v_sector)



# Número de casos positivos dentro de todas las pruebas
plt_tipo_res <- ggplot(data = df_gro, aes(x = RESULTADO_LAB)) + 
                        geom_bar(aes(fill = RESULTADO_LAB)) + 
                        labs(title = "Resultado de pruebas de COVID-19", 
                             subtitle = "Guerrero, 2020",
                             y = "Número de pruebas", 
                             x = "Tipo de resultado") + 
                        scale_fill_brewer(palette = "Set3") +
                        scale_x_discrete(labels = c("Pendiente", "No adecuado", "Sin muestra", "Negativo", "Positivo")) + 
                        theme_minimal() +
                        theme(legend.position = "none")

ggplotly(p = plt_tipo_res)
    
```

También podemos observar que las pruebas están igualmente distribuidas entre hombres y mujeres:

```{r tercera}

# Gráfica de pastel por sexo
etiquetas <- names(table(df_gro$SEXO))
valores <- table(df_gro$SEXO)

plot_ly(labels = etiquetas, values = valores, type = "pie", 
        textinfo = "percent", insidetextorientation='radial') %>% 
    layout(title = "Porcentaje de pruebas COVID, por sexo, Guerrero - 2020")
```


Respecto a la toma de pruebas por grupo de edad, notamos que hay un crecimiento desde los recién nacidos hasta el grupo de edad de entre 30 y 40 años, que cuenta con 10,361 pruebas realizadas. A partir de dicho grupo, el número de pruebas tiene un descenso constante hasta el último grupo de edad, de 100 a 110 años.

```{r}
# Gráfico de pruebas por edad 
plt_pr_edad <- ggplot(data = df_gro, aes(x = cat_edad)) + 
                    geom_bar(aes(fill = cat_edad)) + 
                    labs(title = "Número de pruebas COVID, Guerrero - 2019", 
                         subtitle = "por grupos de edad",
                         y = "Número de pruebas", 
                         x = "Grupo de edad (en años)")  +
                    theme_minimal() +
                    theme(legend.position = "none")

ggplotly(p = plt_pr_edad)
```

En porcentajes, podemos observar que los cuatro grupos de edad con más pruebas realizadas (de 30 a 40, de 40 a 50, de 20 a 30 y de 50 a 60 años) comprenden prácticamente el 75% de todas las pruebas realizadas.

```{r}
# Gráfica de pastel por sexo
etiquetas <- names(table(df_gro$cat_edad))
valores <- table(df_gro$cat_edad)

plot_ly(labels = etiquetas, values = valores, type = "pie", 
        textinfo = "percent", insidetextorientation='radial') %>% 
    layout(title = "Porcentaje de pruebas COVID, por sexo, Guerrero - 2020")
```

Si a cada grupo de edad lo dividimos por sexo, podemos notar que de los 0 hasta los 50 años las mujeres tienen más pruebas de COVID que los hombres, a partir de esa edad, los hombres tienen más pruebas que las mujeres.

```{r }
# Por edad y Sexo
plt_pr_age_sex <- ggplot(data = df_gro, aes(x = cat_edad, fill = SEXO)) +
                    geom_bar(position = "dodge") +
                    scale_fill_brewer(palette = "Set2", name = "Sexo", labels = c("Mujer", "Hombre")) +
                    labs(title = "Distribución de pruebas realizadas, Guerrero - 2019", 
                         subtitle = "Por grupo de edad y sexo", 
                         x = "Grupo de edad (en años)", 
                         y = "Cantidad de pruebas realizadas") +
                    theme_minimal()


ggplotly(p = plt_pr_age_sex)
```

Respecto a los sectores de salud que han administrado mayor número de pruebas, notamos una clara predominancia por parte de la Secretaría de salud (SSA), con más del 70%, seguido por el Instituto Mexicano del Seguro Social, con cerca del 20%. El prácticamente 10% de las pruebas restantes se distribuyen en el resto de los sectores mencionados en la base de datos.

```{r cuarta}
# Gráfica de pruebas por sector
etiquetas <- names(table(df_gro$SECTOR))
valores <- table(df_gro$SECTOR)

plot_ly(labels = etiquetas, values = valores, type = "pie", 
        textinfo = "percent", insidetextorientation='radial') %>% 
    layout(title = "Distribución de pruebas COVID, por Sector, Guerrero - 2020")

```

Para todas las edades, la SSA es quien más ha administrado las pruebas de COVID. Notamos que el IMSS incrementa su participación dentro de la administración de pruebas a partir del grupo de 20 a 30 años, esto se puede deber a que en dichos grupos de edad muchas personas ya se han incorporado a labores formales. Esto mismo pasa con el ISSSTE, pero con una proporción menor que el IMSS para todas los grupos de edad.

```{r}
# Para Sector
plt_sec_age <- ggplot(data = df_gro, aes(x = cat_edad, fill = SECTOR)) +
                      geom_bar(position = "stack") +
                      scale_fill_brewer(palette = "Set3", direction = -1) +
                      labs(title = "Distribución de pruebas COVID-19", 
                             subtitle = "Por sector, en grupos de edad",
                             x = "Grupo de edad", 
                             y = "Número de pruebas") +
                      theme_minimal()


ggplotly(plt_sec_age)

```

De todos las personas que tomaron la prueba para el COVID, el 18% de éstas fueron hospitalizadas.

```{r}
valores_tp <- table(df_gro$TIPO_PACIENTE)
clases_tp <- c("Ambulatorio", "Hospitalizado")

plot_ly(labels = clases_tp, values = valores_tp, type = "pie") %>% 
    layout(title = "Porcentaje de tipos de pacientes de COVID, Guerrero - 2020")

```




## Fallecimientos debido al SARS-COVID 19 en Guerrero

Aunque el número de pruebas haya sido igualmente distribuidos por sexos, en el siguiente gráfico de pastel podemos notar que existe una mayor cantidad de fallecidos del sexo masculino, con 63% de los confirmados. Las mujeres representan el restante 37% de los fallecimientos en Guerrero.

```{r quinta}
# Fallecimientos por sexo
etiquetas <- names(table(df_gro_falle$SEXO))
valores <- table(df_gro_falle$SEXO)

plot_ly(labels = etiquetas, values = valores, type = "pie", 
        textinfo = "percent", insidetextorientation='radial') %>% 
    layout(title = "Porcentaje de fallecimientos por COVID, agrupado por sexo, Guerrero - 2020")
```

Respecto a los grupos de edad, observamos que el que tiene el mayor número de fallecimientos comprende los 60 a los 70 años, con 942 fallecidos, seguido por los grupos de 50 a 60 y 70 a 80 años de edad, con 677 y 725 casos, respectivamente. 

```{r}
falle_edad <- ggplot(df_gro_falle, aes(x=cat_edad, fill=factor(cat_edad))) + 
                        geom_bar(width = 1, color="white") + 
                        labs(title = "Distribución de fallecimientos por Edad", 
                             subtitle = "Guerrero, 2020", 
                             x = "Grupo de edad", 
                             y = "Cantidad de fallecimientos" ) +
                        scale_fill_brewer(palette = "Paired", name = "Grupo de edad") + 
                        theme(legend.position = "none") +
                        theme_minimal()

ggplotly(falle_edad)
```


Visto en porcentajes, estos los tres grupos de edad con mayor número de fallecimientos representan casi el 72% de todos los fallecimientos en el estado de Guerrero

```{r}
etiquetas <- names(table(df_gro_falle$cat_edad))
valores <- table(df_gro_falle$cat_edad)

plot_ly(labels = etiquetas, values = valores, type = "pie", 
        textinfo = "percent", insidetextorientation='radial') %>% 
    layout(title = "Porcentaje de fallecimientos por COVID, en grupo de edad, Guerrero - 2020")

```

Viendo a los grupos de edad, separados por sexos, notamos que en casi todas las edades, menos en el primer y último grupos de edad, los varones comprenden la mayor parte de los fallecimientos.  La brecha de número de fallecimientos por sexo se amplifica en los grupos comprendidos entre los 50 a 80 años de edad. El caso más claro es en el grupo de 60 a 70 años, donde el número de hombres fallecidos es 1.8 veces más grande que el de las mujeres. 

```{r}
falle_edad_sex <- ggplot(data = df_gro_falle, aes(x = cat_edad, fill = SEXO)) +
                            geom_bar(position = "dodge") +
                            scale_fill_brewer(palette = "Dark2", name = "Sexo", labels = c("Mujer", "Hombre")) +
                            labs(title = "Número de fallecimientos , Guerrero - 2019", 
                                 subtitle = "Por grupo de edad y sexo", 
                                 x = "Grupo de edad (en años)", 
                                 y = "Número de Fallecimientos") + 
                            theme_minimal()

ggplotly(falle_edad_sex)

```

A pesar de que el sector privado haya sido de los que tuvieron menos pruebas realizadas, observamos que es el que tiene el mayor número de personas fallecidas, seguido por los hospitales estatales e IMSS-Bienestar. Si las casas de las personas enfermas por COVID cuenta como el sector privado entonces esto tiene sentido, de otra forma la razón por la cual haya más fallecidos en el sector privado no la puedo inferir.

```{r}
# Fallecimientos por sector
etiquetas <- names(table(df_gro_falle$SECTOR))
valores <- table(df_gro_falle$SECTOR)

colors <- c('rgb(211,94,96)', 'rgb(128,133,133)', 'rgb(144,103,167)', 'rgb(171,104,87)', 'rgb(114,147,203)')

plot_ly(labels = etiquetas, 
        values = valores, 
        type = "pie", 
        textinfo = "percent", 
        insidetextorientation= 'radial',
        marker = list(colors = colors)) %>% 
    layout(title = "Porcentaje de fallecimientos por COVID, agrupado en sectores de salud, Guerrero - 2020")

```

# Cálculo de índices

```{r enfermos por municipio}

sick_muni <- df_gro %>% 
                group_by(MUNICIPIO_RES) %>% 
                count(RESULTADO_LAB) %>% 
                filter(RESULTADO_LAB == 1) %>% 
                select(-RESULTADO_LAB)

sick_muni_cl <- merge(x = sick_muni, by.x = "MUNICIPIO_RES",
                        y = df_muni_gro,  by.y ="CLAVE_MUNICIPIO") %>% 
  arrange(-n) %>% 
  rename("Número de casos positivos" = n)



DT::datatable(sick_muni_cl, rownames = F)

```


```{r intubados por municipio}

intub_muni <- df_gro %>% 
    group_by(MUNICIPIO_RES) %>% 
    count(INTUBADO) %>%
    filter(INTUBADO == 1) %>% 
  select(-INTUBADO)

intub_muni_cl <- merge(x = intub_muni, by.x = "MUNICIPIO_RES",
                        y = df_muni_gro,  by.y ="CLAVE_MUNICIPIO") %>% 
                arrange(-n) %>% 
  rename("Número de personas intubadas" = n)

DT::datatable(intub_muni_cl, rownames = F, caption = "Personas intubadas por municipio")
```

```{r muertos por municipio}

muertes_muni <- df_gro %>% 
    group_by(MUNICIPIO_RES) %>% 
    count(FECHA_DEF!= "9999-99-99") %>% 
    rename(f_def = "FECHA_DEF != \"9999-99-99\"") %>% 
    filter(f_def == TRUE) %>% 
    arrange(-n) %>% 
    rename(muertos = n) %>% 
    select(-f_def)

muertes_muni_cl <- merge(x = muertes_muni, by.x = "MUNICIPIO_RES",
                        y = df_muni_gro,  by.y ="CLAVE_MUNICIPIO") %>% 
  arrange(-muertos) %>%
  rename("Número de personas fallecidas" = muertos)

DT::datatable(muertes_muni_cl, rownames = F, caption = "Personas Fallecidas por municipio")


```


```{r mortalidad por municipio}

enfermos_muni <- df_gro %>% 
                    filter(RESULTADO_LAB == 1) %>% 
                    group_by(MUNICIPIO_RES) %>% 
                    count(XX) %>% 
                    select(-XX) %>% 
                    rename(enfermos = n)

datos_muni <- base::merge(x = enfermos_muni, 
                          y = muertes_muni, 
                          by = "MUNICIPIO_RES") 

mortalidad_muni <- merge(x = datos_muni, by.x = "MUNICIPIO_RES",
                         y = df_muni_gro,  by.y ="CLAVE_MUNICIPIO") %>% 
                  mutate(mortalidad = muertos/enfermos) %>% 
                            arrange(-mortalidad) %>% 
  select(-enfermos, -muertos) %>% 
  rename("Tasa de mortalidad" = mortalidad)

DT::datatable(mortalidad_muni, 
              rownames = F, 
              caption = "Mortalidad por municipio") %>% 
  formatRound("Tasa de mortalidad", 2)

```


```{r edad promedio prueba positiva}
df_gro$EDAD <- as.numeric(df_gro$EDAD)

edad_muni <- df_gro %>% 
                group_by(MUNICIPIO_RES) %>% 
                summarise(prom_edad = mean(EDAD)) %>% 
                arrange(-prom_edad)

prom_edad_pos <- merge(x = edad_muni, by.x = "MUNICIPIO_RES",
                         y = df_muni_gro,  by.y ="CLAVE_MUNICIPIO") %>% 
                  arrange(-prom_edad) %>% 
  rename("Edad promedio" = prom_edad)

DT::datatable(prom_edad_pos, rownames = F, 
              caption = "Edad promedio de personas que se realizan la prueba de COVID") %>% 
  formatRound("Edad promedio", 2)

```

```{r edad promedio de personas fallecidas}

df_gro_falle$EDAD <- as.numeric(df_gro_falle$EDAD)

edad_muni_falle <- df_gro_falle %>% 
                group_by(MUNICIPIO_RES) %>% 
                summarise(prom_edad_falle = mean(EDAD)) %>% 
                arrange(-prom_edad_falle)

prom_edad_falle <- merge(x = edad_muni_falle, by.x = "MUNICIPIO_RES",
                         y = df_muni_gro,  by.y ="CLAVE_MUNICIPIO") %>% 
                  arrange(-prom_edad_falle) %>% 
  rename("Edad promedio" = prom_edad_falle)


DT::datatable(prom_edad_falle, rownames = F, 
              caption = "Edad promedio de personas fallecidas por COVID") %>% 
  formatRound("Edad promedio", 2)

```


```{r tiempo promedio de síntomas a hospitalizacion por municipio}

sin_hosp <- df_gro %>% 
    mutate(sin_hosp = FECHA_INGRESO - FECHA_SINTOMAS) %>% 
    group_by(MUNICIPIO_RES) %>% 
    summarise(sin_hosp = mean(as.numeric(sin_hosp))) %>% 
    arrange(-sin_hosp)

sin_hosp_muni <- merge(x = sin_hosp, by.x = "MUNICIPIO_RES",
                         y = df_muni_gro,  by.y ="CLAVE_MUNICIPIO") %>% 
                  arrange(-sin_hosp)

```



```{r tiempo promedio de síntomas a defunción por municipio}

df_sin_muer <- df_gro_falle %>% 
    mutate(sin_muer = FECHA_DEF - FECHA_SINTOMAS) %>% 
    group_by(MUNICIPIO_RES) %>% 
    summarise(
      sin_muer = mean(as.numeric(sin_muer))) %>% 
    arrange(-sin_muer)
    
sin_muer_muni <- merge(x = df_sin_muer, by.x = "MUNICIPIO_RES",
                         y = df_muni_gro,  by.y ="CLAVE_MUNICIPIO") %>% 
                  arrange(-sin_muer)

```


# Gráficos

```{r}
# Importamos el mapa de Guerrero
guerrero <- readOGR(".", "guerrero", encoding = "UTF-8")

guerrero$CVE_MUN <- as.numeric(guerrero$CVE_MUN)
guerrero$NOMGEO <- str_replace_all(guerrero$NOMGEO, 
                                   c("ï¿½" = "á", "ï¿½" = "é" ,"ï¿½" = "í", "ï¿½" = "ó", "ï¿½" = "ú"))

names(mortalidad_muni)

mortal_muni <- mortalidad_muni %>% 
  select(MUNICIPIO_RES, "Tasa de mortalidad")

intub_muni2 <- intub_muni_cl %>% 
  select(MUNICIPIO_RES, intubados = "Número de personas intubadas")

prom_age_pos <- prom_edad_pos %>% 
  select(MUNICIPIO_RES, edad_pos = "Edad promedio")


guerrero@data <- guerrero@data %>% 
                  left_join(enfermos_muni, by = c("CVE_MUN" = "MUNICIPIO_RES" )) %>% 
                  left_join(muertes_muni, by = c("CVE_MUN" = "MUNICIPIO_RES" )) %>% 
                  left_join(mortal_muni, by = c("CVE_MUN" = "MUNICIPIO_RES" )) %>% 
                  left_join(intub_muni2, by = c("CVE_MUN" = "MUNICIPIO_RES" )) %>% 
                  left_join(prom_age_pos, by = c("CVE_MUN" = "MUNICIPIO_RES" )) %>% 
                  left_join(edad_muni_falle, by = c("CVE_MUN" = "MUNICIPIO_RES" ))
```


## Municipal 1

```{r casos confirmados por municipio}
# Tamaño del intervalo para colores
cuts <- c(0, 100, 500, 1000, 2000, 10000, Inf)

# Paleta de colores basado en el número de enfermos
qpal <- colorBin(palette= "Greens",
                 domain = guerrero$enfermos,
                 na.color="transparent",
                 bins = cuts )

# Leyenda emergente cuando se pone el cursor sobre cada municipio
textoss <- paste(
  "Municipio : ",guerrero$NOMGEO,"<br/>",
  "Número de casos confirmados: ", round(guerrero$enfermos,2),"<br/>", 
  "Edad promedio de los casos confirmados:", round(guerrero$edad_pos, 2)) %>%
  lapply(htmltools::HTML)

# Ejecutamos el mapa
leaflet(data = guerrero) %>%
  addTiles() %>% 
        addPolygons(label = ~textoss, 
                    weight = 0.7, 
                    smoothFactor = 0.5,
                    opacity = 1,
                    fillOpacity = 0.8,
                    fillColor = ~ qpal(guerrero$enfermos)) %>% 
  addLegend(pal = qpal, 
            values = guerrero$enfermos, 
            opacity = 0.8, 
            title = "Número de pruebas positivas")

```

## Municipal 2

```{r muertes por municipio}

# Tamaño del intervalo para colores
cuts <- c(0, 20, 50, 100, 1000, Inf)

# Paleta de colores basado en el número de enfermos
qpal <- colorBin(palette= "Greys",
                 domain = guerrero$muertos,
                 na.color="transparent",
                 bins = cuts )

# Leyenda emergente cuando se pone el cursor sobre cada municipio
textoss <- paste(
  "Municipio : ",guerrero$NOMGEO,"<br/>",
  "Número de personas fallecidas: ", round(guerrero$muertos,2),"<br/>", 
  "Edad promedio de fallecidos:", round(guerrero$prom_edad_falle, 2)) %>%
  lapply(htmltools::HTML)

# Ejecutamos el mapa
leaflet(data = guerrero) %>%
  addTiles() %>% 
        addPolygons(label = ~textoss, 
                    weight = 0.7, 
                    smoothFactor = 0.5,
                    opacity = 1,
                    fillOpacity = 0.9,
                    fillColor = ~ qpal(guerrero$enfermos)) %>% 
  addLegend(pal = qpal, 
            values = guerrero$enfermos, 
            opacity = 0.8, 
            title = "Fallecimientos por COVID")

```


## Estatal 



## Mostrar la evolución de la pandemia a nivel estatal

```{r}
# Preparamos base de datos para serie de tiempo de fallecimientos
ts_muertos <- data.frame(table(df_gro_falle$FECHA_DEF))
ts_muertos$Var1 <- as.Date(ts_muertos$Var1)
ts_muertos$sum_acu <- cumsum(ts_muertos$Freq)

# Nombres de los ejes
lab_x <- list(title = "Fecha")
lab_y <- list(title = "Número de muertos")

plot_ly(data = ts_muertos) %>%
  add_trace(x = ~ Var1,
            y = ~ Freq,
            type = "scatter",
            mode = "lines+markers",
            name = "Guerrero") %>% 
  layout(title = "Muertes diarias por COVID, Guerrero", 
        xaxis = lab_x, 
        yaxis = lab_y)
```


```{r}
# BAse de datos de inicio de síntomas
ts_enfermos <- data.frame(table(df_gro$FECHA_SINTOMAS))
ts_enfermos$Var1 <- as.Date(ts_enfermos$Var1)
ts_enfermos$sum_acu <- cumsum(ts_enfermos$Freq)

lab_x <- list(title = "Fecha")
lab_y <- list(title = "Suma acumulada de personas con síntomas")

plot_ly(data = ts_enfermos) %>%
  add_trace(x = ~ Var1,
            y = ~ sum_acu,
            type = "scatter",
            mode = "lines+markers",
            name = "Guerrero") %>%
  add_trace() %>% 
  layout(title = "Personas con síntomas, acumuladas por COVID, Guerrero", 
        xaxis = lab_x, 
        yaxis = lab_y)


```

```{r}

# Preparamos base de datos para serie de tiempo de fallecimientos
ts_muertos <- data.frame(table(df_gro_falle$FECHA_DEF))
ts_muertos$Var1 <- as.Date(ts_muertos$Var1)
ts_muertos$sum_acu <- cumsum(ts_muertos$Freq)


lab_x <- list(title = "Fecha")
lab_y <- list(title = "Suma acumulada de fallecimientos")

plot_ly(data = ts_muertos) %>%
  add_trace(x = ~ Var1,
            y = ~ sum_acu,
            type = "scatter",
            mode = "lines+markers",
            name = "Guerrero") %>%
  add_trace() %>% 
  layout(title = "Muertes acumuladas por COVID, Guerrero", 
        xaxis = lab_x, 
        yaxis = lab_y)

```
